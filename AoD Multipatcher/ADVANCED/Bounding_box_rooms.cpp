#include "stdafx.h"
#include "MISC/Misc_Functions.h"


bool Detect_BB_rooms_status()						// Restituisce vero se la modifica è attivata, falso se il codice è originale
{
	size_t Position;

	//////////////////		SYS_DRAW_CRP::Calculate		Stringhe del solo bounding box massimo (per risparmiare tempo viene evitato il controllo del minimo)
	string BBmax_p4("\xD9\x87\x90\0\0\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x87\x94\0\0\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x87\x98\0\0\0", 54);
	string BBmax_p3("\xD9\x87\x90\0\0\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x87\x94\0\0\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x87\x98\0\0\0", 54);
	string BBmax("\xD8\x81\x90\0\0\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x81\x94\0\0\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x81\x98\0\0\0", 52);
	
	if ((Position = EXEorig.find(BBmax_p4)) != std::string::npos)
		return false;
	if ((Position = EXEorig.find(BBmax_p3)) != std::string::npos)
		return false;
	if ((Position = EXEorig.find(BBmax)) != std::string::npos)
		return false;
	return true;			// Se non trova alcuna stringa originale significa che il file è modificato
}


void Change_BB_rooms_status()
{
	//////////////////////////////////////////////////////////////////		STRINGHE ORIGINALI
	
	//////////////////		SYS_DRAW_CRP::Calculate
	string BBmin_p4("\xD9\x87\x80\0\0\0\x9E\xD9\xCA\xDA\xC9\xDD\xD9\xDC\xE9\xD9\x85\xD0\xFE\xFF\xFF\xD8\xD2\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x09\xDD\xD9\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x87\x84\0\0\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD9\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x87\x88\0\0\0", 82);
	string BBmax_p4("\xD9\x87\x90\0\0\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x87\x94\0\0\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x87\x98\0\0\0", 54);	
	string BBmin_p3("\xD9\x87\x80\0\0\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x09\xDD\xD8\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x87\x84\0\0\0\xD8\xE3\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD8\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x87\x88\0\0\0", 65);
	string BBmax_p3("\xD9\x87\x90\0\0\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x87\x94\0\0\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x87\x98\0\0\0", 54);
	string BBmin("\xD9\x81\x80\0\0\0\x89\x44\x24\x0C\xD8\x64\x24\x0C\xD8\x5C\x24\x30\xDF\xE0\x25\0\x41\0\0\x0F\x84\xCF\0\0\0\xD9\x81\x84\0\0\0\xD8\x64\x24\x0C\xD8\x5C\x24\x34\xDF\xE0\x25\0\x41\0\0\x0F\x84\xB4\0\0\0\xD9\x81\x88\0\0\0", 64);
	string BBmax("\xD8\x81\x90\0\0\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x81\x94\0\0\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x81\x98\0\0\0", 52);


	///////////////////////////////////////////////////////////////////		STRINGHE MODIFICATE
	
	//////////////////		SYS_DRAW_CRP::Calculate		TRAOD_P4
	string mod_BBmin_p452("\xD9\x05\x30\xA1\x42\0\x9E\xD9\xCA\xDA\xC9\xDD\xD9\xDC\xE9\xD9\x85\xD0\xFE\xFF\xFF\xD8\xD2\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x09\xDD\xD9\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\x30\xA1\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD9\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\x30\xA1\x42\0", 82);
	string mod_BBmax_p452("\xD9\x05\x9C\xA1\x42\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x05\x9C\xA1\x42\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x05\x9C\xA1\x42\0", 54);
	string mod_BBmin_p449("\xD9\x05\xA8\xA2\x42\0\x9E\xD9\xCA\xDA\xC9\xDD\xD9\xDC\xE9\xD9\x85\xD0\xFE\xFF\xFF\xD8\xD2\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x09\xDD\xD9\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\xA8\xA2\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD9\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\xA8\xA2\x42\0", 82);
	string mod_BBmax_p449("\xD9\x05\x78\xA2\x42\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x05\x78\xA2\x42\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x05\x78\xA2\x42\0", 54);
	string mod_BBmin_p442("\xD9\x05\xD0\x98\x42\0\x9E\xD9\xCA\xDA\xC9\xDD\xD9\xDC\xE9\xD9\x85\xD0\xFE\xFF\xFF\xD8\xD2\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x09\xDD\xD9\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\xD0\x98\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD9\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\xD0\x98\x42\0", 82);
	string mod_BBmax_p442("\xD9\x05\xB0\x98\x42\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x05\xB0\x98\x42\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x05\xB0\x98\x42\0", 54);
	string mod_BBmin_p439("\xD9\x05\xB0\x87\x42\0\x9E\xD9\xCA\xDA\xC9\xDD\xD9\xDC\xE9\xD9\x85\xD0\xFE\xFF\xFF\xD8\xD2\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x09\xDD\xD9\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\xB0\x87\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD9\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\xB0\x87\x42\0", 82);
	string mod_BBmax_p439("\xD9\x05\x90\x87\x42\0\xD8\xC3\xD8\xDC\xD9\xCB\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xDA\xDD\xD9\xDD\xD8\xEB\x28\xD9\x05\x90\x87\x42\0\xD8\xC2\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD9\xDD\xD8\xEB\x13\xD9\x05\x90\x87\x42\0", 54);

	//////////////////		SYS_DRAW_CRP::Calculate		TRAOD_P3
	string mod_BBmin_p352("\xD9\x05\x70\x89\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x09\xDD\xD8\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\x70\x89\x42\0\xD8\xE3\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD8\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\x70\x89\x42\0", 65);
	string mod_BBmax_p352("\xD9\x05\x6C\x89\x42\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x05\x6C\x89\x42\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x05\x6C\x89\x42\0", 54);
	string mod_BBmin_p349("\xD9\x05\x24\x8A\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x09\xDD\xD8\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\x24\x8A\x42\0\xD8\xE3\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD8\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\x24\x8A\x42\0", 65);
	string mod_BBmax_p349("\xD9\x05\x20\x8A\x42\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x05\x20\x8A\x42\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x05\x20\x8A\x42\0", 54);
	string mod_BBmin_p342("\xD9\x05\x30\x86\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x09\xDD\xD8\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\x30\x86\x42\0\xD8\xE3\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD8\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\x30\x86\x42\0", 65);
	string mod_BBmax_p342("\xD9\x05\x2C\x86\x42\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x05\x2C\x86\x42\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x05\x2C\x86\x42\0", 54);
	string mod_BBmin_p339("\xD9\x05\xE4\x72\x42\0\xD8\xE2\xD8\xD9\xDF\xE0\x9E\x76\x09\xDD\xD8\xDD\xD8\xE9\x7F\0\0\0\xD9\x85\xD4\xFE\xFF\xFF\xD9\x05\xE4\x72\x42\0\xD8\xE3\xD8\xD9\xDF\xE0\x9E\x76\x08\xDD\xD8\xDD\xD8\xDD\xD8\xEB\x62\xD9\x85\xD8\xFE\xFF\xFF\xD9\x05\xE4\x72\x42\0", 65);
	string mod_BBmax_p339("\xD9\x05\xE0\x72\x42\0\xD8\xC4\xD8\xDB\xD9\xCA\xDD\xD8\xDF\xE0\x9E\x73\x08\xDD\xD9\xDD\xD8\xDD\xD8\xEB\x28\xD9\x05\xE0\x72\x42\0\xD8\xC3\xDE\xD9\xDF\xE0\x9E\x73\x06\xDD\xD8\xDD\xD8\xEB\x13\xD9\x05\xE0\x72\x42\0", 54);

	//////////////////		SYS_DRAW_CRP::Calculate		TRAOD
	string mod_BBmin_52("\xD9\x05\x10\x22\x42\0\x89\x44\x24\x0C\xD8\x64\x24\x0C\xD8\x5C\x24\x30\xDF\xE0\x25\0\x41\0\0\x0F\x84\xCF\0\0\0\xD9\x05\x10\x22\x42\0\xD8\x64\x24\x0C\xD8\x5C\x24\x34\xDF\xE0\x25\0\x41\0\0\x0F\x84\xB4\0\0\0\xD9\x05\x10\x22\x42\0", 64);
	string mod_BBmax_52("\xD8\x05\x14\x22\x42\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x05\x14\x22\x42\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x05\x14\x22\x42\0", 52);
	string mod_BBmin_49("\xD9\x05\x30\x23\x42\0\x89\x44\x24\x0C\xD8\x64\x24\x0C\xD8\x5C\x24\x30\xDF\xE0\x25\0\x41\0\0\x0F\x84\xCF\0\0\0\xD9\x05\x30\x23\x42\0\xD8\x64\x24\x0C\xD8\x5C\x24\x34\xDF\xE0\x25\0\x41\0\0\x0F\x84\xB4\0\0\0\xD9\x05\x30\x23\x42\0", 64);
	string mod_BBmax_49("\xD8\x05\x34\x23\x42\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x05\x34\x23\x42\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x05\x34\x23\x42\0", 52);
	string mod_BBmin_42("\xD9\x05\x10\x20\x42\0\x89\x44\x24\x0C\xD8\x64\x24\x0C\xD8\x5C\x24\x30\xDF\xE0\x25\0\x41\0\0\x0F\x84\xCF\0\0\0\xD9\x05\x10\x20\x42\0\xD8\x64\x24\x0C\xD8\x5C\x24\x34\xDF\xE0\x25\0\x41\0\0\x0F\x84\xB4\0\0\0\xD9\x05\x10\x20\x42\0", 64);
	string mod_BBmax_42("\xD8\x05\x14\x20\x42\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x05\x14\x20\x42\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x05\x14\x20\x42\0", 52);
	string mod_BBmin_39("\xD9\x05\xD0\x10\x42\0\x89\x44\x24\x0C\xD8\x64\x24\x0C\xD8\x5C\x24\x30\xDF\xE0\x25\0\x41\0\0\x0F\x84\xCF\0\0\0\xD9\x05\xD0\x10\x42\0\xD8\x64\x24\x0C\xD8\x5C\x24\x34\xDF\xE0\x25\0\x41\0\0\x0F\x84\xB4\0\0\0\xD9\x05\xD0\x10\x42\0", 64);
	string mod_BBmax_39("\xD8\x05\xD4\x10\x42\0\xD8\x5C\x24\x30\xDF\xE0\xF6\xC4\x05\x0F\x8B\x80\0\0\0\xD9\x44\x24\x0C\xD8\x05\xD4\x10\x42\0\xD8\x5C\x24\x34\xDF\xE0\xF6\xC4\x05\x7B\x6B\xD9\x44\x24\x0C\xD8\x05\xD4\x10\x42\0", 52);


	size_t Position;
	bool BB_rooms_status = Detect_BB_rooms_status();
	if (BB_rooms_status)	// Se il file è modificato, bisogna cercare le stringhe mod e sostituirle con le originali
	{
		// TRAOD_P4
		if ((Position = EXEorig.find(mod_BBmin_p452)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p4, Position);
		if ((Position = EXEorig.find(mod_BBmax_p452)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p4, Position);
		if ((Position = EXEorig.find(mod_BBmin_p449)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p4, Position);
		if ((Position = EXEorig.find(mod_BBmax_p449)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p4, Position);
		if ((Position = EXEorig.find(mod_BBmin_p442)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p4, Position);
		if ((Position = EXEorig.find(mod_BBmax_p442)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p4, Position);
		if ((Position = EXEorig.find(mod_BBmin_p439)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p4, Position);
		if ((Position = EXEorig.find(mod_BBmax_p439)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p4, Position);

		// TRAOD_P3
		if ((Position = EXEorig.find(mod_BBmin_p352)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p3, Position);
		if ((Position = EXEorig.find(mod_BBmax_p352)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p3, Position);
		if ((Position = EXEorig.find(mod_BBmin_p349)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p3, Position);
		if ((Position = EXEorig.find(mod_BBmax_p349)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p3, Position);
		if ((Position = EXEorig.find(mod_BBmin_p342)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p3, Position);
		if ((Position = EXEorig.find(mod_BBmax_p342)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p3, Position);
		if ((Position = EXEorig.find(mod_BBmin_p339)) != std::string::npos)
			ChangeSTRINGValue(BBmin_p3, Position);
		if ((Position = EXEorig.find(mod_BBmax_p339)) != std::string::npos)
			ChangeSTRINGValue(BBmax_p3, Position);

		// TRAOD
		if ((Position = EXEorig.find(mod_BBmin_52)) != std::string::npos)
			ChangeSTRINGValue(BBmin, Position);
		if ((Position = EXEorig.find(mod_BBmax_52)) != std::string::npos)
			ChangeSTRINGValue(BBmax, Position);
		if ((Position = EXEorig.find(mod_BBmin_49)) != std::string::npos)
			ChangeSTRINGValue(BBmin, Position);
		if ((Position = EXEorig.find(mod_BBmax_49)) != std::string::npos)
			ChangeSTRINGValue(BBmax, Position);
		if ((Position = EXEorig.find(mod_BBmin_42)) != std::string::npos)
			ChangeSTRINGValue(BBmin, Position);
		if ((Position = EXEorig.find(mod_BBmax_42)) != std::string::npos)
			ChangeSTRINGValue(BBmax, Position);
		if ((Position = EXEorig.find(mod_BBmin_39)) != std::string::npos)
			ChangeSTRINGValue(BBmin, Position);
		if ((Position = EXEorig.find(mod_BBmax_39)) != std::string::npos)
			ChangeSTRINGValue(BBmax, Position);
	}
	else					// Se il file è originale bisogna applicare le stringhe modificate, controllando prima la versione 52/49/42/39
	{
		// TRAOD_P4
		if ((Position = EXEorig.find(BBmin_p4)) != std::string::npos)
		{
			if (ver == 452)
				ChangeSTRINGValue(mod_BBmin_p452, Position);
			if (ver == 449)
				ChangeSTRINGValue(mod_BBmin_p449, Position);
			if (ver == 442)
				ChangeSTRINGValue(mod_BBmin_p442, Position);
			if (ver == 439)
				ChangeSTRINGValue(mod_BBmin_p439, Position);
		}
		if ((Position = EXEorig.find(BBmax_p4)) != std::string::npos)
		{
			if (ver == 452)
				ChangeSTRINGValue(mod_BBmax_p452, Position);
			if (ver == 449)
				ChangeSTRINGValue(mod_BBmax_p449, Position);
			if (ver == 442)
				ChangeSTRINGValue(mod_BBmax_p442, Position);
			if (ver == 439)
				ChangeSTRINGValue(mod_BBmax_p439, Position);
		}

		// TRAOD_P3
		if ((Position = EXEorig.find(BBmin_p3)) != std::string::npos)
		{
			if (ver == 352)
				ChangeSTRINGValue(mod_BBmin_p352, Position);
			if (ver == 349)
				ChangeSTRINGValue(mod_BBmin_p349, Position);
			if (ver == 342)
				ChangeSTRINGValue(mod_BBmin_p342, Position);
			if (ver == 339)
				ChangeSTRINGValue(mod_BBmin_p339, Position);
		}
		if ((Position = EXEorig.find(BBmax_p3)) != std::string::npos)
		{
			if (ver == 352)
				ChangeSTRINGValue(mod_BBmax_p352, Position);
			if (ver == 349)
				ChangeSTRINGValue(mod_BBmax_p349, Position);
			if (ver == 342)
				ChangeSTRINGValue(mod_BBmax_p342, Position);
			if (ver == 339)
				ChangeSTRINGValue(mod_BBmax_p339, Position);
		}

		// TRAOD
		if ((Position = EXEorig.find(BBmin)) != std::string::npos)
		{
			if (ver == 52)
				ChangeSTRINGValue(mod_BBmin_52, Position);
			if (ver == 49)
				ChangeSTRINGValue(mod_BBmin_49, Position);
			if (ver == 42)
				ChangeSTRINGValue(mod_BBmin_42, Position);
			if (ver == 39)
				ChangeSTRINGValue(mod_BBmin_39, Position);
		}
		if ((Position = EXEorig.find(BBmax)) != std::string::npos)
		{
			if (ver == 52)
				ChangeSTRINGValue(mod_BBmax_52, Position);
			if (ver == 49)
				ChangeSTRINGValue(mod_BBmax_49, Position);
			if (ver == 42)
				ChangeSTRINGValue(mod_BBmax_42, Position);
			if (ver == 39)
				ChangeSTRINGValue(mod_BBmax_39, Position);
		}
	}
}